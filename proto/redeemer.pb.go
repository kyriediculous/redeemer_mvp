// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/redeemer.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Redemption_Stage int32

const (
	Redemption_PENDING Redemption_Stage = 0
	Redemption_MINED   Redemption_Stage = 1
)

var Redemption_Stage_name = map[int32]string{
	0: "PENDING",
	1: "MINED",
}

var Redemption_Stage_value = map[string]int32{
	"PENDING": 0,
	"MINED":   1,
}

func (x Redemption_Stage) String() string {
	return proto.EnumName(Redemption_Stage_name, int32(x))
}

func (Redemption_Stage) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1cc0a0186b53a357, []int{2, 0}
}

type Ticket struct {
	Recipient              []byte   `protobuf:"bytes,1,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Sender                 []byte   `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty"`
	FaceValue              []byte   `protobuf:"bytes,3,opt,name=face_value,json=faceValue,proto3" json:"face_value,omitempty"`
	WinProb                []byte   `protobuf:"bytes,4,opt,name=win_prob,json=winProb,proto3" json:"win_prob,omitempty"`
	SenderNonce            uint32   `protobuf:"varint,5,opt,name=sender_nonce,json=senderNonce,proto3" json:"sender_nonce,omitempty"`
	RecipientRandHash      []byte   `protobuf:"bytes,6,opt,name=recipient_rand_hash,json=recipientRandHash,proto3" json:"recipient_rand_hash,omitempty"`
	CreationRound          int64    `protobuf:"varint,7,opt,name=creation_round,json=creationRound,proto3" json:"creation_round,omitempty"`
	CreationRoundBlockHash []byte   `protobuf:"bytes,8,opt,name=creation_round_block_hash,json=creationRoundBlockHash,proto3" json:"creation_round_block_hash,omitempty"`
	Sig                    []byte   `protobuf:"bytes,9,opt,name=sig,proto3" json:"sig,omitempty"`
	RecipientRand          []byte   `protobuf:"bytes,10,opt,name=recipient_rand,json=recipientRand,proto3" json:"recipient_rand,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *Ticket) Reset()         { *m = Ticket{} }
func (m *Ticket) String() string { return proto.CompactTextString(m) }
func (*Ticket) ProtoMessage()    {}
func (*Ticket) Descriptor() ([]byte, []int) {
	return fileDescriptor_1cc0a0186b53a357, []int{0}
}

func (m *Ticket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ticket.Unmarshal(m, b)
}
func (m *Ticket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ticket.Marshal(b, m, deterministic)
}
func (m *Ticket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ticket.Merge(m, src)
}
func (m *Ticket) XXX_Size() int {
	return xxx_messageInfo_Ticket.Size(m)
}
func (m *Ticket) XXX_DiscardUnknown() {
	xxx_messageInfo_Ticket.DiscardUnknown(m)
}

var xxx_messageInfo_Ticket proto.InternalMessageInfo

func (m *Ticket) GetRecipient() []byte {
	if m != nil {
		return m.Recipient
	}
	return nil
}

func (m *Ticket) GetSender() []byte {
	if m != nil {
		return m.Sender
	}
	return nil
}

func (m *Ticket) GetFaceValue() []byte {
	if m != nil {
		return m.FaceValue
	}
	return nil
}

func (m *Ticket) GetWinProb() []byte {
	if m != nil {
		return m.WinProb
	}
	return nil
}

func (m *Ticket) GetSenderNonce() uint32 {
	if m != nil {
		return m.SenderNonce
	}
	return 0
}

func (m *Ticket) GetRecipientRandHash() []byte {
	if m != nil {
		return m.RecipientRandHash
	}
	return nil
}

func (m *Ticket) GetCreationRound() int64 {
	if m != nil {
		return m.CreationRound
	}
	return 0
}

func (m *Ticket) GetCreationRoundBlockHash() []byte {
	if m != nil {
		return m.CreationRoundBlockHash
	}
	return nil
}

func (m *Ticket) GetSig() []byte {
	if m != nil {
		return m.Sig
	}
	return nil
}

func (m *Ticket) GetRecipientRand() []byte {
	if m != nil {
		return m.RecipientRand
	}
	return nil
}

type RedemptionsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RedemptionsRequest) Reset()         { *m = RedemptionsRequest{} }
func (m *RedemptionsRequest) String() string { return proto.CompactTextString(m) }
func (*RedemptionsRequest) ProtoMessage()    {}
func (*RedemptionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1cc0a0186b53a357, []int{1}
}

func (m *RedemptionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RedemptionsRequest.Unmarshal(m, b)
}
func (m *RedemptionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RedemptionsRequest.Marshal(b, m, deterministic)
}
func (m *RedemptionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RedemptionsRequest.Merge(m, src)
}
func (m *RedemptionsRequest) XXX_Size() int {
	return xxx_messageInfo_RedemptionsRequest.Size(m)
}
func (m *RedemptionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RedemptionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RedemptionsRequest proto.InternalMessageInfo

type Redemption struct {
	// Types that are valid to be assigned to Result:
	//	*Redemption_Data
	//	*Redemption_Error
	Result               isRedemption_Result `protobuf_oneof:"result"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Redemption) Reset()         { *m = Redemption{} }
func (m *Redemption) String() string { return proto.CompactTextString(m) }
func (*Redemption) ProtoMessage()    {}
func (*Redemption) Descriptor() ([]byte, []int) {
	return fileDescriptor_1cc0a0186b53a357, []int{2}
}

func (m *Redemption) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Redemption.Unmarshal(m, b)
}
func (m *Redemption) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Redemption.Marshal(b, m, deterministic)
}
func (m *Redemption) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Redemption.Merge(m, src)
}
func (m *Redemption) XXX_Size() int {
	return xxx_messageInfo_Redemption.Size(m)
}
func (m *Redemption) XXX_DiscardUnknown() {
	xxx_messageInfo_Redemption.DiscardUnknown(m)
}

var xxx_messageInfo_Redemption proto.InternalMessageInfo

type isRedemption_Result interface {
	isRedemption_Result()
}

type Redemption_Data struct {
	Data *Redemption_Result `protobuf:"bytes,1,opt,name=data,proto3,oneof"`
}

type Redemption_Error struct {
	Error string `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*Redemption_Data) isRedemption_Result() {}

func (*Redemption_Error) isRedemption_Result() {}

func (m *Redemption) GetResult() isRedemption_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *Redemption) GetData() *Redemption_Result {
	if x, ok := m.GetResult().(*Redemption_Data); ok {
		return x.Data
	}
	return nil
}

func (m *Redemption) GetError() string {
	if x, ok := m.GetResult().(*Redemption_Error); ok {
		return x.Error
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Redemption) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Redemption_Data)(nil),
		(*Redemption_Error)(nil),
	}
}

type Redemption_Result struct {
	Stage                Redemption_Stage `protobuf:"varint,1,opt,name=stage,proto3,enum=proto.Redemption_Stage" json:"stage,omitempty"`
	Tx                   []byte           `protobuf:"bytes,2,opt,name=tx,proto3" json:"tx,omitempty"`
	Sender               []byte           `protobuf:"bytes,3,opt,name=sender,proto3" json:"sender,omitempty"`
	Value                []byte           `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Redemption_Result) Reset()         { *m = Redemption_Result{} }
func (m *Redemption_Result) String() string { return proto.CompactTextString(m) }
func (*Redemption_Result) ProtoMessage()    {}
func (*Redemption_Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_1cc0a0186b53a357, []int{2, 0}
}

func (m *Redemption_Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Redemption_Result.Unmarshal(m, b)
}
func (m *Redemption_Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Redemption_Result.Marshal(b, m, deterministic)
}
func (m *Redemption_Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Redemption_Result.Merge(m, src)
}
func (m *Redemption_Result) XXX_Size() int {
	return xxx_messageInfo_Redemption_Result.Size(m)
}
func (m *Redemption_Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Redemption_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Redemption_Result proto.InternalMessageInfo

func (m *Redemption_Result) GetStage() Redemption_Stage {
	if m != nil {
		return m.Stage
	}
	return Redemption_PENDING
}

func (m *Redemption_Result) GetTx() []byte {
	if m != nil {
		return m.Tx
	}
	return nil
}

func (m *Redemption_Result) GetSender() []byte {
	if m != nil {
		return m.Sender
	}
	return nil
}

func (m *Redemption_Result) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func init() {
	proto.RegisterEnum("proto.Redemption_Stage", Redemption_Stage_name, Redemption_Stage_value)
	proto.RegisterType((*Ticket)(nil), "proto.Ticket")
	proto.RegisterType((*RedemptionsRequest)(nil), "proto.RedemptionsRequest")
	proto.RegisterType((*Redemption)(nil), "proto.Redemption")
	proto.RegisterType((*Redemption_Result)(nil), "proto.Redemption.Result")
}

func init() { proto.RegisterFile("proto/redeemer.proto", fileDescriptor_1cc0a0186b53a357) }

var fileDescriptor_1cc0a0186b53a357 = []byte{
	// 491 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x52, 0xd1, 0x6e, 0xda, 0x30,
	0x14, 0x25, 0xd0, 0x04, 0xb8, 0x14, 0x44, 0x5d, 0xc4, 0x02, 0xdb, 0x34, 0x16, 0x69, 0x12, 0x2f,
	0x0b, 0x13, 0x7b, 0xda, 0xcb, 0x26, 0x55, 0x45, 0xa3, 0x0f, 0x43, 0x95, 0x37, 0x6d, 0x8f, 0x91,
	0x49, 0x6e, 0xc1, 0x2a, 0xb5, 0x99, 0xe3, 0xac, 0xdd, 0x67, 0xec, 0x27, 0xf7, 0x09, 0x7b, 0x9e,
	0x6c, 0x43, 0x69, 0xc4, 0x53, 0x7c, 0xcf, 0x39, 0x3e, 0xbe, 0xb9, 0xe7, 0x42, 0x6f, 0xab, 0xa4,
	0x96, 0x13, 0x85, 0x19, 0xe2, 0x1d, 0xaa, 0xd8, 0x96, 0xc4, 0xb7, 0x9f, 0xe1, 0xf3, 0x95, 0x94,
	0xab, 0x0d, 0x4e, 0x6c, 0xb5, 0x2c, 0x6e, 0x26, 0x78, 0xb7, 0xd5, 0xbf, 0x9d, 0x26, 0xfa, 0x5b,
	0x85, 0xe0, 0x1b, 0x4f, 0x6f, 0x51, 0x93, 0x17, 0xd0, 0x54, 0x98, 0xf2, 0x2d, 0x47, 0xa1, 0x43,
	0x6f, 0xe4, 0x8d, 0x4f, 0xe9, 0x01, 0x20, 0x7d, 0x08, 0x72, 0x14, 0x19, 0xaa, 0xb0, 0x6a, 0xa9,
	0x5d, 0x45, 0x5e, 0x02, 0xdc, 0xb0, 0x14, 0x93, 0x5f, 0x6c, 0x53, 0x60, 0x58, 0x73, 0xd7, 0x0c,
	0xf2, 0xdd, 0x00, 0x64, 0x00, 0x8d, 0x7b, 0x2e, 0x92, 0xad, 0x92, 0xcb, 0xf0, 0xc4, 0x92, 0xf5,
	0x7b, 0x2e, 0xae, 0x95, 0x5c, 0x92, 0xd7, 0x70, 0xea, 0x3c, 0x12, 0x21, 0x45, 0x8a, 0xa1, 0x3f,
	0xf2, 0xc6, 0x6d, 0xda, 0x72, 0xd8, 0xc2, 0x40, 0x24, 0x86, 0xf3, 0xc7, 0x0e, 0x12, 0xc5, 0x44,
	0x96, 0xac, 0x59, 0xbe, 0x0e, 0x03, 0x6b, 0x74, 0xf6, 0x48, 0x51, 0x26, 0xb2, 0x39, 0xcb, 0xd7,
	0xe4, 0x0d, 0x74, 0x52, 0x85, 0x4c, 0x73, 0x29, 0x12, 0x25, 0x0b, 0x91, 0x85, 0xf5, 0x91, 0x37,
	0xae, 0xd1, 0xf6, 0x1e, 0xa5, 0x06, 0x24, 0x1f, 0x60, 0x50, 0x96, 0x25, 0xcb, 0x8d, 0x4c, 0x6f,
	0x9d, 0x79, 0xc3, 0x9a, 0xf7, 0x4b, 0x37, 0x2e, 0x0c, 0x6d, 0x5f, 0xe8, 0x42, 0x2d, 0xe7, 0xab,
	0xb0, 0x69, 0x45, 0xe6, 0x68, 0xde, 0x2c, 0xf7, 0x18, 0x82, 0x25, 0xdb, 0xa5, 0xf6, 0xa2, 0x1e,
	0x10, 0x8a, 0x99, 0x19, 0x3d, 0x97, 0x22, 0xa7, 0xf8, 0xb3, 0xc0, 0x5c, 0x47, 0xff, 0x3c, 0x80,
	0x03, 0x4c, 0x62, 0x38, 0xc9, 0x98, 0x66, 0x76, 0xfa, 0xad, 0x69, 0xe8, 0x32, 0x8a, 0x0f, 0x82,
	0x98, 0x62, 0x5e, 0x6c, 0xf4, 0xbc, 0x42, 0xad, 0x8e, 0xf4, 0xc1, 0x47, 0xa5, 0xa4, 0xcb, 0xa4,
	0x39, 0xaf, 0x50, 0x57, 0x0e, 0x0b, 0x08, 0x9c, 0x92, 0xbc, 0x05, 0x3f, 0xd7, 0x6c, 0x85, 0xd6,
	0xb2, 0x33, 0x7d, 0x76, 0x6c, 0xf9, 0xd5, 0xd0, 0xd4, 0xa9, 0x48, 0x07, 0xaa, 0xfa, 0x61, 0x97,
	0x70, 0x55, 0x3f, 0x3c, 0x49, 0xbd, 0x56, 0x4a, 0xbd, 0x07, 0xbe, 0x0b, 0xdc, 0x65, 0xea, 0x8a,
	0xe8, 0x15, 0xf8, 0xd6, 0x8d, 0xb4, 0xa0, 0x7e, 0x3d, 0x5b, 0x5c, 0x5e, 0x2d, 0x3e, 0x77, 0x2b,
	0xa4, 0x09, 0xfe, 0x97, 0xab, 0xc5, 0xec, 0xb2, 0xeb, 0x5d, 0x34, 0x20, 0x50, 0xb6, 0xaf, 0xe9,
	0x1f, 0x0f, 0x3a, 0x6e, 0xef, 0xe8, 0x6e, 0x69, 0xc9, 0x47, 0x38, 0x77, 0xe7, 0x1f, 0x5c, 0x08,
	0x2e, 0x56, 0xbb, 0xb5, 0x6c, 0xef, 0x5a, 0x76, 0xe5, 0xb0, 0x1f, 0xbb, 0x75, 0x8e, 0xf7, 0xeb,
	0x1c, 0xcf, 0xcc, 0x3a, 0x47, 0x15, 0xf2, 0x09, 0x5a, 0x4f, 0x26, 0x4c, 0x06, 0x47, 0xbf, 0xba,
	0x9f, 0xfa, 0xf0, 0xec, 0x88, 0x8a, 0x2a, 0xef, 0xbc, 0x65, 0x60, 0xd1, 0xf7, 0xff, 0x03, 0x00,
	0x00, 0xff, 0xff, 0xa3, 0xe1, 0xb1, 0x31, 0x4e, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TicketRedeemerClient is the client API for TicketRedeemer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TicketRedeemerClient interface {
	RedeemWinningTicket(ctx context.Context, in *Ticket, opts ...grpc.CallOption) (*empty.Empty, error)
	Redemptions(ctx context.Context, in *RedemptionsRequest, opts ...grpc.CallOption) (TicketRedeemer_RedemptionsClient, error)
}

type ticketRedeemerClient struct {
	cc *grpc.ClientConn
}

func NewTicketRedeemerClient(cc *grpc.ClientConn) TicketRedeemerClient {
	return &ticketRedeemerClient{cc}
}

func (c *ticketRedeemerClient) RedeemWinningTicket(ctx context.Context, in *Ticket, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/proto.TicketRedeemer/RedeemWinningTicket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ticketRedeemerClient) Redemptions(ctx context.Context, in *RedemptionsRequest, opts ...grpc.CallOption) (TicketRedeemer_RedemptionsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TicketRedeemer_serviceDesc.Streams[0], "/proto.TicketRedeemer/Redemptions", opts...)
	if err != nil {
		return nil, err
	}
	x := &ticketRedeemerRedemptionsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TicketRedeemer_RedemptionsClient interface {
	Recv() (*Redemption, error)
	grpc.ClientStream
}

type ticketRedeemerRedemptionsClient struct {
	grpc.ClientStream
}

func (x *ticketRedeemerRedemptionsClient) Recv() (*Redemption, error) {
	m := new(Redemption)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// TicketRedeemerServer is the server API for TicketRedeemer service.
type TicketRedeemerServer interface {
	RedeemWinningTicket(context.Context, *Ticket) (*empty.Empty, error)
	Redemptions(*RedemptionsRequest, TicketRedeemer_RedemptionsServer) error
}

// UnimplementedTicketRedeemerServer can be embedded to have forward compatible implementations.
type UnimplementedTicketRedeemerServer struct {
}

func (*UnimplementedTicketRedeemerServer) RedeemWinningTicket(ctx context.Context, req *Ticket) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RedeemWinningTicket not implemented")
}
func (*UnimplementedTicketRedeemerServer) Redemptions(req *RedemptionsRequest, srv TicketRedeemer_RedemptionsServer) error {
	return status.Errorf(codes.Unimplemented, "method Redemptions not implemented")
}

func RegisterTicketRedeemerServer(s *grpc.Server, srv TicketRedeemerServer) {
	s.RegisterService(&_TicketRedeemer_serviceDesc, srv)
}

func _TicketRedeemer_RedeemWinningTicket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Ticket)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketRedeemerServer).RedeemWinningTicket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TicketRedeemer/RedeemWinningTicket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketRedeemerServer).RedeemWinningTicket(ctx, req.(*Ticket))
	}
	return interceptor(ctx, in, info, handler)
}

func _TicketRedeemer_Redemptions_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RedemptionsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TicketRedeemerServer).Redemptions(m, &ticketRedeemerRedemptionsServer{stream})
}

type TicketRedeemer_RedemptionsServer interface {
	Send(*Redemption) error
	grpc.ServerStream
}

type ticketRedeemerRedemptionsServer struct {
	grpc.ServerStream
}

func (x *ticketRedeemerRedemptionsServer) Send(m *Redemption) error {
	return x.ServerStream.SendMsg(m)
}

var _TicketRedeemer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.TicketRedeemer",
	HandlerType: (*TicketRedeemerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RedeemWinningTicket",
			Handler:    _TicketRedeemer_RedeemWinningTicket_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Redemptions",
			Handler:       _TicketRedeemer_Redemptions_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/redeemer.proto",
}
